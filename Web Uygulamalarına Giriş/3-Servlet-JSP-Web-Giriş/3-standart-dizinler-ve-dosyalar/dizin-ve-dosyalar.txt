	Figürde bir uygulamanın basit bir dizin yapısı verilmiştir. Bu dizinlerin bazıları servlet
ve JSP spesifikasyonunun bir parçasıdır. Sonuç olarak tüm Java web uygulamaları için standarttırlar.
Örneğin servletleri kullanan tüm web uygulamaları WEB-INF ve WEB-INF/classes dizinlerini içermelidir.
Ek olarak tercihen WEB-INF/lib ve ya META-INF gibi dizinleri ekleyebilirsiniz.
	
	Fakat elbette bir uygulamayı organize etmek ve yapılandırmak için bir programcı dizinlerin
içerisinde başka dizinler oluşturabilir. Örneğin figürdeki Admin, Cart ve Download dizinleri böyle
dizinlerdendir. Her web uygulamasında bir kök dizin bulunmalıdır. Bu dizin document root directory
 ve ya sadece document root olarak adlandırılabilir. Figürde document root directory musicStore
olarak adlandırılmıştır ve Tomcat webapps dizinine bağlıdır. Ardından uygulamanın tüm dosya ve 
dizinleri bu kök dizinin altında bulunmalıdır.

	Kök dizinin altında bulunan WEB-INF dizini tipik olarak uygulama için bir web.xml dosyası
içerir. Ayrıca bu dizin kullanılarak webden doğrudan erişilmesi istenmeyen dosya ve dizinler burada
tutulabilir. Örneğin veri dosyaları WEB-INF dizini altında tutularakkullanıcıların  verilere
 doğrudan erişimi engellenebilir.

	WEB-INF dizini aynı zamanda bir kaç standart dizini içerir. Özellikle WEB-INF/classes dizini
uygulamanın JAR dosyalarında saklanmayan servlet dahil tüm Java sınıfları için kök dizindir. Tipik
olarak bu sınıflar bizim yazdığımız sınıflardır. Buna karşılık WEB-INF/lib dizininde uygulama için
Java  kütüphanelerini içeren JAR dosyaları bulunur. Tomcat lib dizini web serverında çalışan tüm
uygulamarın erişebildiği JAR dosyalarını tutar. Dolayısıyla JAR dosyasının sadece bir uygulama  için
erişilebilir olmasını istiyorsak WEB-INF/lib dizinini kullanabiliriz.    

	Uygulama için oluşturulan sınıfları organize etmek için paketler kullanılabilir. Dolayısıyla
her paket için bir alt dizin oluşturulur. 

	Kök dizin: Bu dizin ve alt dizinleri tipik olarak uygulama için HTML ve JSP dosyalarını tutar.

	/WEB-INF: Bu dizinde tipik olarak web.xml isimli bir dosya bulunur. Bu dosya kullanılarak 
uygulamayı oluşturan servletler ve diğer bileşenler yapılandırılabilir. Ayrıca bu dizine webden doğrudan
erişim yoktur.

	/WEB-INF/classes: Bu dizin ve alt dizinleri uygulamanın servletlerini ve diğer Java sınıflarını
içerir. Her bir alt dizin Java'nın paket yapısına denk gelmelidir. 

	/WEB-INF/lib: Bu dizinde uygulamanın kullandığı Java kütüphanelerini içeren JAR dosyaları bulunur.

	/META-INF: Bu dizinde context.xml dosyası bulunur. Bu dosya kullanılarak web uygulamasının içeriği
yapılandırılabilir.

	- Bir uygulamanın en üst dizini uygulamanın kök dizini olarak bilinir.

	- Bir Java web uygulaması, dizin ve dosyaları Java EE spesifikasyonu tarafından tanımlanan standart
düzene göre tutar. 

	- JAR dosyalarında bulunan sınıfları birden fazla web uygulamasının erişimine açmak için Tomcat lib
dizini kullanılabilir
